<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">

	 <security:http disable-url-rewriting="true" request-matcher="regex" pattern="\/my-account\/approval-dashboard|\/my-account\/orderApprovalDetails\/[0-9a-zA-Z]+">
		<security:session-management session-authentication-strategy-ref="fixation" />
		
		<!-- SSL / AUTHENTICATED pages Organization management pages -->
		<security:intercept-url pattern="/my-account/approval-dashboard" access="hasAnyRole('ROLE_B2BAPPROVERGROUP','ROLE_B2BADMINGROUP')" requires-channel="https"/>
		<security:intercept-url pattern="\/my-account\/orderApprovalDetails\/[0-9]+" access="hasAnyRole('ROLE_B2BAPPROVERGROUP','ROLE_B2BADMINGROUP')" requires-channel="https"/>
		<security:form-login
				login-page="/login"
				authentication-details-source-ref="gpWebAuthenticationDetailsSource"
				authentication-failure-handler-ref="loginAuthenticationFailureHandler"
				authentication-success-handler-ref="loginGuidAuthenticationSuccessHandler"
				username-parameter="j_username" 
				password-parameter="j_password"
				login-processing-url="/j_spring_security_check" 
				authentication-failure-url="/login?login_error=1" 
				/>
		<security:logout logout-url="/logout" success-handler-ref="logoutSuccessHandler"/>

		<security:port-mappings>
			<security:port-mapping http="#{configurationService.configuration.getProperty('tomcat.http.port')}"
								   https="#{configurationService.configuration.getProperty('tomcat.ssl.port')}"/>
			<security:port-mapping http="80" https="443"/>
		</security:port-mappings>

		<security:request-cache ref="httpSessionRequestCache"/>
		<security:access-denied-handler ref="defaultAccessDeniedHandler"/>
		<security:csrf token-repository-ref="csrfTokenRepository" request-matcher-ref="csrfProtectionMatcher" />

		<security:headers>
			<security:frame-options disabled="true"/>
		</security:headers>
	</security:http>

	<!-- Add to the excludeUrlSet so that the main http element ignores and passes over the matching to the above secuirity:http configuration -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<ref bean="excludeUrlSet"/>
		</property>
		<property name="targetMethod">
			<value>addAll</value>
		</property>
		<property name="arguments">
			<util:set>
				<value>/my-account/approval-dashboard</value>
				<value>/my-account/orderApprovalDetails/**</value>
			</util:set>
		</property>
	</bean>
	
	<bean id="gpWebAuthenticationDetailsSource" class="com.gp.b2baccaddon.commerce.security.GPWebAuthenticationDetailsSource" />
	
	<security:authentication-manager id="b2bAcceleratorAuthenticationManager">
		<security:authentication-provider ref="b2bAcceleratorAuthenticationProvider"/>
	</security:authentication-manager>
	
	<bean id="b2bAcceleratorAuthenticationProvider" parent="abstractAcceleratorAuthenticationProvider"
		  class="com.gp.b2baccaddon.commerce.security.B2BAcceleratorAuthenticationProvider">
		<property name="preAuthenticationChecks" ref="b2bRejectUserPreAuthenticationChecks"/>
		<property name="b2bUserGroupProvider" ref="b2bUserGroupProvider"/>
		<property name="userDetailsService" ref="defaultWsUserDetailsService" />
		<aop:scoped-proxy/>
	</bean>
	<alias name="defaultWsUserDetailsService" alias="wsUserDetailsService" />
	<bean id="defaultWsUserDetailsService" class="com.gp.b2baccaddon.commerce.security.GPUserDetailsService" />
			
	<bean id="b2bUserGroupProvider" class="com.gp.b2baccaddon.commerce.security.impl.DefaultB2BUserGroupProvider">
		<property name="userService" ref="userService"/>
		<property name="b2BCustomerService" ref="defaultB2BCustomerService"/>
		<property name="authorizedGroups" ref="authorizedGroups"/>
		<property name="authorizedGroupsToCheckOut" ref="authorizedGroupsToCheckOut"/>
	</bean>
	
	<util:set id="authorizedGroups" value-type="java.lang.String">
		<value>b2bcustomergroup</value>
		<value>b2bmanagergroup</value>
		<value>b2bapprovergroup</value>
	    <value>b2badmingroup</value>
	</util:set>
	
	<util:set id="authorizedGroupsToCheckOut" value-type="java.lang.String">
		<value>b2bcustomergroup</value>
	</util:set>

	<bean id="b2bRejectUserPreAuthenticationChecks" class="de.hybris.platform.spring.security.RejectUserPreAuthenticationChecks">
		<property name="allowedUserTypes">
			<list>
				<value>Customer</value>
				<value>Employee</value>
			</list>
		</property>
	</bean>
	
	<bean id="loginGuidAuthenticationSuccessHandler" class="com.gp.b2baccaddon.commerce.security.GUIDAuthenticationSuccessHandler" >
		<property name="authenticationSuccessHandler" ref="loginAuthenticationSuccessHandler" />
		<property name="guidCookieStrategy" ref="guidCookieStrategy" />
		<property name="tokenGranter" ref="gpResourceOwnerPasswordTokenGranter"/>
		<property name="clientTokenGranter" ref="gpClientCredentialsTokenGranter"/>
        <property name="oauthTokenService" ref="oauthTokenService"/>
		<property name="clientId" value="${oauth.client.id}"/>
	    <property name="clientSecret" value="${oauth.client.secret}"/>
	    <property name ="oAuthCookieGenerator" ref = "oAuthCookieGenerator"/>
        <property name ="refreshCookieGenerator" ref = "refreshCookieGenerator"/>
        <property name="cmmIdCookieGenerator" ref="cmmIdCookieGenerator"/>
        <property name="customerFacade" ref="customerFacade"/>
	</bean>
	
	<bean id="cmmIdCookieGenerator" class="com.gp.commerce.b2b.storefront.security.cookie.EnhancedCookieGenerator">
		<property name="cookieSecure" value="true" />
		<property name="cookieName" value="cmm_id" />
		<property name="httpOnly" value="true"/>
		<property name="configurationService" ref="configurationService"/>
	</bean>
		
	<bean id="oAuthCookieGenerator" class="com.gp.commerce.b2b.storefront.security.cookie.EnhancedCookieGenerator" >
		<property name="cookieSecure" value="true" />
		<property name="cookieName" value="access_token" />
		<property name="httpOnly" value="false"/>
		<property name="configurationService" ref="configurationService"/> 	
	</bean>
	<bean id="refreshCookieGenerator" class="com.gp.commerce.b2b.storefront.security.cookie.EnhancedCookieGenerator" >
		<property name="cookieSecure" value="true" />
		<property name="cookieName" value="refresh_token" />
		<property name="httpOnly" value="false"/>
		<property name="configurationService" ref="configurationService"/>		
	</bean>
	
	<bean id="loginAuthenticationFailureHandler" class="com.gp.commerce.b2b.storefront.security.LoginAuthenticationFailureHandler" >
        <property name="bruteForceAttackCounter" ref="bruteForceAttackCounter" />
		<property name="defaultFailureUrl" value="/login?error=true"/>
	</bean>
	
	<bean id="gpOAuth2RequestFactory"
          class="org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory">
        <constructor-arg ref="oauthClientDetails"/>
    </bean>

    <bean id="gpResourceOwnerPasswordTokenGranter"
          class="org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter">
        <constructor-arg name="authenticationManager" ref="authenticationManager"/>
        <constructor-arg name="tokenServices" ref="oauthTokenServices"/>
        <constructor-arg name="clientDetailsService" ref="oauthClientDetails"/>
        <constructor-arg name="requestFactory" ref="gpOAuth2RequestFactory"/>
    </bean>
    
    <bean id="gpClientCredentialsTokenGranter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenGranter">
        <constructor-arg name="tokenServices" ref="oauthTokenServices"/>
        <constructor-arg name="clientDetailsService" ref="oauthClientDetails"/>
        <constructor-arg name="requestFactory" ref="gpOAuth2RequestFactory"/>
        <property name="allowRefresh" value="true"/>
    </bean>
    
    
	<alias name="defaultB2BLoginAuthenticationSuccessHandler" alias="loginAuthenticationSuccessHandler"/>
	<bean id="defaultB2BLoginAuthenticationSuccessHandler"
		  class="de.hybris.platform.acceleratorstorefrontcommons.security.StorefrontAuthenticationSuccessHandler">
		<property name="customerFacade" ref="customerFacade"/>
		<property name="defaultTargetUrl" value="#{'responsive' == '${commerceservices.default.desktop.ui.experience}' ? '/' : '/my-account'}"/>
		<property name="useReferer" value="true"/>
		<property name="requestCache" ref="httpSessionRequestCache"/>
		<property name="uiExperienceService" ref="uiExperienceService"/>
		<property name="cartFacade" ref="cartFacade"/>
		<property name="customerConsentDataStrategy" ref="customerConsentDataStrategy"/>
        <property name="adminGroup" value="ROLE_ADMINGROUP"/>
        <property name="forceDefaultTargetForUiExperienceLevel">
			<map key-type="de.hybris.platform.commerceservices.enums.UiExperienceLevel" value-type="java.lang.Boolean"/>
		</property>
		<property name="restrictedPages" ref="loginSuccessRestrictedPages"/>
		<property name="listRedirectUrlsForceDefaultTarget" ref="loginSuccessForceDefaultTarget"/>
		<property name="bruteForceAttackCounter" ref="bruteForceAttackCounter"/>
		<property name="cartRestorationStrategy" ref="cartRestorationStrategy"/>
	</bean>
	
	<util:list id="loginSuccessRestrictedPages" value-type="java.lang.String">
		<value>/login</value>
	</util:list>
	
	<util:list id="loginSuccessForceDefaultTarget" value-type="java.lang.String">
		<value>/checkout</value>
	</util:list>
	
</beans>